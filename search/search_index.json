{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ETF Analytics Documentation","text":"<p>Welcome to the ETF Analytics documentation. This comprehensive tool helps you track and analyze ETF performance with automated data collection and metrics calculation.</p>"},{"location":"#overview","title":"Overview","text":"<p>The ETF Analytics system provides:</p> <ul> <li>Automated Data Collection: Daily updates from Yahoo Finance</li> <li>52-Week Analysis: Track high/low points and key dates</li> <li>Threshold Monitoring: Monitor price decreases from peaks</li> <li>Database Storage: Organized data storage with SQLite</li> <li>Validation: Comprehensive data validation and error checking</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>New to ETF Analytics? Start here:</p> <ol> <li>How to Run Scripts - Step-by-step execution guide</li> <li>Installation - Setup instructions</li> <li>Configuration - Customize your setup</li> </ol>"},{"location":"#key-features","title":"Key Features","text":""},{"location":"#data-collection","title":"\ud83d\udcca Data Collection","text":"<ul> <li>Fetch historical price data (OHLCV)</li> <li>Support for multiple ETFs and stocks</li> <li>Automated daily updates via GitHub Actions</li> </ul>"},{"location":"#analytics","title":"\ud83d\udcc8 Analytics","text":"<ul> <li>52-week high/low calculations</li> <li>Price decrease thresholds (10%, 15%, 20%, 25%, 30%)</li> <li>Historical performance tracking</li> </ul>"},{"location":"#data-validation","title":"\ud83d\udee1\ufe0f Data Validation","text":"<ul> <li>ISIN code validation</li> <li>Duplicate detection</li> <li>Data consistency checks</li> <li>Comprehensive error handling</li> </ul>"},{"location":"#database-management","title":"\ud83d\udcbe Database Management","text":"<ul> <li>SQLite database with optimized schema</li> <li>Foreign key relationships</li> <li>Indexed queries for performance</li> <li>Backup and recovery capabilities</li> </ul>"},{"location":"#current-tracked-etfs","title":"Current Tracked ETFs","text":"<ul> <li>Vanguard S&amp;P 500 UCITS ETF (VUAA.L)</li> <li>ISIN: IE00BFMXXD54</li> <li>Exchange: London Stock Exchange</li> <li> <p>Currency: USD</p> </li> <li> <p>iShares NASDAQ 100 UCITS ETF (CNDX.L)</p> </li> <li>ISIN: IE00B53SZB19</li> <li>Exchange: London Stock Exchange</li> <li>Currency: GBP</li> </ul>"},{"location":"#quick-commands","title":"Quick Commands","text":"<pre><code># Initialize everything from scratch\npython -m analytics.database.init_db\npython -m analytics.database.load_symbols\npython -m analytics.etl.market_data_fetcher\n\n# Update data only\npython -m analytics.etl.market_data_fetcher\n\n# Load new symbols\npython -m analytics.database.load_symbols\n</code></pre>"},{"location":"#architecture","title":"Architecture","text":"<p>The system is built with modern Python practices:</p> <ul> <li>Modular Design: Separate packages for analytics and website</li> <li>Clean Interfaces: Well-defined APIs between components</li> <li>Robust Error Handling: Comprehensive logging and validation</li> <li>Scalable Structure: Easy to add new ETFs and features</li> </ul>"},{"location":"#next-steps","title":"Next Steps","text":"<ul> <li>Explore the Components section to understand the system architecture</li> <li>Check the API Reference for detailed function documentation</li> <li>Visit Development to contribute to the project</li> </ul>"},{"location":"#support","title":"Support","text":"<ul> <li>Review error logs for troubleshooting</li> <li>Check data validation for common issues</li> <li>Ensure all dependencies are properly installed</li> <li>Use DB Browser for SQLite to inspect data</li> </ul> <p>Ready to get started? Head to the How to Run Scripts guide!</p>"},{"location":"how_to_run_scripts/","title":"How to Run ETF Analytics Scripts","text":"<p>This guide explains how to run the ETF analytics scripts in the correct order to set up and maintain your database.</p>"},{"location":"how_to_run_scripts/#prerequisites","title":"Prerequisites","text":"<p>Before running any scripts, ensure you have: 1. Python 3.10 or higher installed 2. Created and activated a virtual environment 3. Installed all required dependencies</p> <pre><code># Create virtual environment\npython -m venv venv\n\n# Activate virtual environment (Windows Git Bash)\nsource venv/Scripts/activate\n\n# Install dependencies\npip install -r requirements.txt\n</code></pre>"},{"location":"how_to_run_scripts/#script-execution-order","title":"Script Execution Order","text":""},{"location":"how_to_run_scripts/#1-database-initialization","title":"1. Database Initialization","text":"<p>Initialize the database schema and create all tables:</p> <pre><code>python -m analytics.database.init_db\n</code></pre> <p>What it does: - Creates the SQLite database file - Sets up all database tables (symbols, etf_data, fifty_two_week_metrics, decrease_thresholds) - Creates necessary indexes for performance</p>"},{"location":"how_to_run_scripts/#2-load-symbols","title":"2. Load Symbols","text":"<p>Load ETF/stock symbols into the database:</p> <pre><code>python -m analytics.database.load_symbols\n</code></pre> <p>What it does: - Reads symbols from <code>data/reference/symbols.csv</code> - Validates ISIN codes, tickers, and other data - Loads symbols into the database - Verifies data consistency between CSV and database</p>"},{"location":"how_to_run_scripts/#3-fetch-market-data","title":"3. Fetch Market Data","text":"<p>Fetch historical market data and calculate metrics:</p> <pre><code>python -m analytics.etl.market_data_fetcher\n</code></pre> <p>What it does: - Fetches 1 year of historical data from Yahoo Finance - Stores OHLCV data in the database - Calculates 52-week high/low metrics - Calculates decrease thresholds (10%, 15%, 20%, 25%, 30%) - Provides detailed logging of the process</p>"},{"location":"how_to_run_scripts/#daily-operations","title":"Daily Operations","text":""},{"location":"how_to_run_scripts/#automated-updates","title":"Automated Updates","text":"<p>The project includes GitHub Actions for daily updates: - Runs automatically at 22:00 UTC on weekdays - Fetches latest market data - Updates metrics and thresholds - Commits changes to the repository</p>"},{"location":"how_to_run_scripts/#manual-updates","title":"Manual Updates","text":"<p>To manually update data:</p> <pre><code>python -m analytics.etl.market_data_fetcher\n</code></pre>"},{"location":"how_to_run_scripts/#data-verification","title":"Data Verification","text":"<p>Use these SQL queries in DB Browser for SQLite to verify your data:</p>"},{"location":"how_to_run_scripts/#check-symbols","title":"Check Symbols","text":"<pre><code>SELECT * FROM symbols;\n</code></pre>"},{"location":"how_to_run_scripts/#check-market-data","title":"Check Market Data","text":"<pre><code>SELECT \n    s.name,\n    COUNT(*) as data_points,\n    MIN(date) as earliest_date,\n    MAX(date) as latest_date\nFROM etf_data e\nJOIN symbols s ON s.id = e.symbol_id\nGROUP BY s.name;\n</code></pre>"},{"location":"how_to_run_scripts/#check-52-week-metrics","title":"Check 52-Week Metrics","text":"<pre><code>SELECT \n    s.name,\n    m.calculation_date,\n    m.high_52week,\n    m.low_52week,\n    m.high_date,\n    m.low_date\nFROM fifty_two_week_metrics m\nJOIN symbols s ON s.id = m.symbol_id\nORDER BY s.name, m.calculation_date DESC;\n</code></pre>"},{"location":"how_to_run_scripts/#check-decrease-thresholds","title":"Check Decrease Thresholds","text":"<pre><code>SELECT \n    s.name,\n    d.calculation_date,\n    d.high_52week_price,\n    d.decrease_10_price,\n    d.decrease_20_price,\n    d.decrease_30_price\nFROM decrease_thresholds d\nJOIN symbols s ON s.id = d.symbol_id\nORDER BY s.name, d.calculation_date DESC;\n</code></pre>"},{"location":"how_to_run_scripts/#adding-new-symbols","title":"Adding New Symbols","text":"<p>To add new ETFs or stocks:</p> <ol> <li>Edit <code>data/reference/symbols.csv</code></li> <li>Add new row with: isin, ticker, name, asset_type, exchange, currency</li> <li>Run the load symbols script: <code>python -m analytics.database.load_symbols</code></li> <li>Fetch data for new symbols: <code>python -m analytics.etl.market_data_fetcher</code></li> </ol>"},{"location":"how_to_run_scripts/#troubleshooting","title":"Troubleshooting","text":""},{"location":"how_to_run_scripts/#database-lock-errors","title":"Database Lock Errors","text":"<ul> <li>Close DB Browser for SQLite completely</li> <li>Ensure no other processes are using the database</li> <li>Scripts include retry logic for temporary locks</li> </ul>"},{"location":"how_to_run_scripts/#missing-data","title":"Missing Data","text":"<ul> <li>Check internet connection for Yahoo Finance API</li> <li>Verify ticker symbols are correct</li> <li>Check logs for detailed error messages</li> </ul>"},{"location":"how_to_run_scripts/#validation-errors","title":"Validation Errors","text":"<ul> <li>Ensure ISIN codes follow correct format (2 letters + 9 alphanumeric + 1 digit)</li> <li>Verify all required CSV columns are present</li> <li>Check for duplicate entries in CSV</li> </ul>"},{"location":"how_to_run_scripts/#file-structure","title":"File Structure","text":"<pre><code>data/\n\u251c\u2500\u2500 reference/\n\u2502   \u2514\u2500\u2500 symbols.csv          # ETF/stock symbols configuration\n\u2514\u2500\u2500 etf_database.db         # SQLite database file\n\nanalytics/\n\u251c\u2500\u2500 database/\n\u2502   \u251c\u2500\u2500 init_db.py          # Database initialization\n\u2502   \u251c\u2500\u2500 load_symbols.py     # Symbol loading script\n\u2502   \u251c\u2500\u2500 db_manager.py       # Database operations\n\u2502   \u2514\u2500\u2500 schema.sql          # Database schema\n\u251c\u2500\u2500 etl/\n\u2502   \u251c\u2500\u2500 market_data_fetcher.py  # Market data fetching\n\u2502   \u2514\u2500\u2500 data_exporter.py        # Export data to JSON for website\n\u2514\u2500\u2500 utils/\n    \u2514\u2500\u2500 validators.py       # Data validation utilities\n\nwebsite/\n\u251c\u2500\u2500 index.html              # Main dashboard page\n\u251c\u2500\u2500 css/\n\u2502   \u2514\u2500\u2500 style.css          # Dashboard styling\n\u251c\u2500\u2500 js/\n\u2502   \u2514\u2500\u2500 app.js            # Chart.js dashboard logic\n\u2514\u2500\u2500 data/                 # Generated JSON data files\n    \u251c\u2500\u2500 symbols.json      # Available ETFs list\n    \u251c\u2500\u2500 etf_data.json     # Combined ETF data\n    \u251c\u2500\u2500 vuaa.l.json       # Vanguard S&amp;P 500 data\n    \u2514\u2500\u2500 cndx.l.json       # iShares NASDAQ 100 data\n</code></pre>"},{"location":"how_to_run_scripts/#5-generate-website-data","title":"5. Generate Website Data","text":"<p>Before running the website, you need to export data from the database to JSON files:</p> <pre><code># Export ETF data to JSON files for the website\npython -m analytics.etl.data_exporter\n</code></pre> <p>Expected output: <pre><code>Starting data export for website...\nExporting data for Vanguard S&amp;P 500 UCITS ETF (VUAA.L)...\nExporting data for iShares NASDAQ 100 UCITS ETF (CNDX.L)...\n\u2705 Data export completed! Files created in website/data/\n   - etf_data.json (combined data)\n   - symbols.json (symbols list)\n   - vuaa.l.json\n   - cndx.l.json\n</code></pre></p> <p>Verification: <pre><code># Check generated files\nls website/data/\n</code></pre></p>"},{"location":"how_to_run_scripts/#6-run-the-website-locally","title":"6. Run the Website Locally","text":""},{"location":"how_to_run_scripts/#option-a-local-access-only","title":"Option A: Local Access Only","text":"<pre><code># Navigate to website directory\ncd website\n\n# Start local server\npython -m http.server 8000\n</code></pre>"},{"location":"how_to_run_scripts/#option-b-network-access-multiple-devices","title":"Option B: Network Access (Multiple Devices)","text":"<pre><code># Navigate to website directory\ncd website\n\n# Start server accessible from other devices on same WiFi\npython -m http.server 8000 --bind 0.0.0.0\n</code></pre> <p>Access URLs: - Local machine: http://localhost:8000 - Other devices on same WiFi: http://YOUR_IP_ADDRESS:8000   - To find your IP: <code>ipconfig | findstr IPv4</code> (Windows) or <code>hostname -I</code> (Linux/Mac)</p> <p>What you'll see: - ETF Analytics Dashboard with dropdown selector - Interactive Chart.js visualization showing:   - Price evolution over 3 months   - 52-week high/low reference lines   - Decrease threshold markers (10%, 15%, 20%, 25%, 30%) - Metrics panel with 52-week high/low values - Threshold cards showing target prices</p> <p>To stop the server: Press <code>Ctrl+C</code> in the terminal</p>"},{"location":"how_to_run_scripts/#network-access-notes","title":"Network Access Notes","text":"<ul> <li>Same WiFi: Other laptops can access via your IP address</li> <li>Different WiFi: Copy the <code>website/</code> folder to the other machine and run locally</li> <li>Future: Deploy to GitHub Pages for global access</li> </ul>"},{"location":"how_to_run_scripts/#data-update-workflow","title":"Data Update Workflow","text":"<p>For daily updates, run these commands in sequence:</p> <pre><code># 1. Fetch latest market data\npython -m analytics.etl.market_data_fetcher\n\n# 2. Export updated data for website\npython -m analytics.etl.data_exporter\n\n# 3. Website will automatically show updated data on refresh\n</code></pre>"}]}