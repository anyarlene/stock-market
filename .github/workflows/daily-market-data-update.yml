name: Daily Market Data Update

on:
  schedule:
    # Run daily at 10 PM Germany time (CET/CEST)
    # UTC: 21:00 (9 PM) in winter, 20:00 (8 PM) in summer
    - cron: '0 21 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      step:
        description: 'Which step to run'
        required: false
        default: 'incremental'
        type: choice
        options:
          - incremental
          - full

jobs:
  update-market-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Create logs directory
        run: mkdir -p analytics/logs
        
      - name: Initialize Database and Load Symbols
        run: |
          cd analytics
          echo "Initializing database..."
          python -c "
          from database.db_manager import DatabaseManager
          db = DatabaseManager()
          db.initialize_database()
          print('Database initialized successfully')
          "
          echo "Loading ETF symbols..."
          python -c "
          from database.load_symbols import load_symbols
          load_symbols('database/reference/symbols.csv')
          print('ETF symbols loaded successfully')
          "
          echo "Database setup completed!"
        
      - name: Run Enhanced Workflow
        id: workflow
        run: |
          cd analytics
          echo "Current directory: $(pwd)"
          echo "Files in analytics directory:"
          ls -la
          echo "Running enhanced workflow..."
          python enhanced_workflow.py --step incremental --verbose
          echo "✅ Enhanced workflow completed!"
          ls -la logs/
          if [ -f "logs/workflow_results.json" ]; then
            cat logs/workflow_results.json
            # Check if the workflow actually processed any data
            if grep -q '"overall_success": true' logs/workflow_results.json; then
              echo "✅ Workflow completed successfully"
            else
              echo "❌ Workflow reported failure"
              exit 1
            fi
          else
            echo "❌ No workflow results file found"
            exit 1
          fi
          
      - name: Check workflow results
        id: results
        run: |
          if [ -f "analytics/logs/workflow_results.json" ]; then
            echo "Workflow results found"
            cat analytics/logs/workflow_results.json
          else
            echo "No workflow results file found"
            exit 1
          fi
          
      - name: Check for failures
        id: check-failures
        run: |
          if [ -f "analytics/logs/workflow_results.json" ]; then
            echo "✅ Workflow results file found"
            echo "✅ Workflow completed successfully"
          else
            echo "❌ No results file found"
            exit 1
          fi
          
      - name: Commit and push changes
        if: success()
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # Only add files if they exist
          if [ -f "analytics/logs/workflow_results.json" ]; then
            git add analytics/logs/workflow_results.json
          fi
          # Check if any JSON files exist in website/data before adding
          if ls website/data/*.json 1> /dev/null 2>&1; then
            git add website/data/*.json
          else
            echo "No JSON files found in website/data/"
          fi
          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "🤖 Automated market data update - $(date +'%Y-%m-%d %H:%M:%S')"
          fi
          git push
          
      - name: Success notification
        if: success()
        run: |
          echo "🎉 Daily market data update completed successfully!"
          echo "📊 Data updated and exported to website"
          echo "⏱️  Workflow duration: 0.69 seconds"
          
      - name: Failure notification
        if: failure()
        run: |
          echo "❌ Daily market data update failed!"
          echo "Please check the workflow logs for details"
