name: Daily Market Data Update

on:
  schedule:
    # Run daily at 10 PM Germany time (CET/CEST)
    # UTC: 21:00 (9 PM) in winter, 20:00 (8 PM) in summer
    - cron: '0 21 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      step:
        description: 'Which step to run'
        required: false
        default: 'incremental'
        type: choice
        options:
          - incremental
          - full

jobs:
  update-market-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install yfinance pandas sqlite3 requests
          
      - name: Create logs directory
        run: mkdir -p analytics/logs
        
      - name: Run Enhanced Workflow
        id: workflow
        run: |
          cd analytics
          python enhanced_workflow.py --step ${{ github.event.inputs.step || 'incremental' }}
          
      - name: Check workflow results
        id: results
        run: |
          if [ -f "analytics/logs/workflow_results.json" ]; then
            echo "Workflow results found"
            cat analytics/logs/workflow_results.json
          else
            echo "No workflow results file found"
            exit 1
          fi
          
      - name: Check for failures
        id: check-failures
        run: |
          if [ -f "analytics/logs/workflow_results.json" ]; then
            # Check if workflow was successful
            if python -c "
            import json
            with open('analytics/logs/workflow_results.json') as f:
                data = json.load(f)
                if not data.get('overall_success', False):
                    print('Workflow failed')
                    exit(1)
                else:
                    print('Workflow successful')
            "; then
              echo "‚úÖ Workflow completed successfully"
            else
              echo "‚ùå Workflow failed"
              exit 1
            fi
          else
            echo "‚ùå No results file found"
            exit 1
          fi
          
      - name: Commit and push changes
        if: success()
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add website/data/*.json
          git add analytics/logs/workflow_results.json
          git commit -m "ü§ñ Automated market data update - $(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
          git push
          
      - name: Success notification
        if: success()
        run: |
          echo "üéâ Daily market data update completed successfully!"
          echo "üìä Data updated and exported to website"
          echo "‚è±Ô∏è  Workflow duration: $(python -c "
          import json
          with open('analytics/logs/workflow_results.json') as f:
              data = json.load(f)
              print(f'{data.get(\"overall_duration\", 0):.2f} seconds')
          ")"
          
      - name: Failure notification
        if: failure()
        run: |
          echo "‚ùå Daily market data update failed!"
          echo "Please check the workflow logs for details"
          if [ -f "analytics/logs/workflow_results.json" ]; then
            echo "Error details:"
            python -c "
            import json
            with open('analytics/logs/workflow_results.json') as f:
                data = json.load(f)
                for error in data.get('errors', []):
                    print(f'  - {error}')
            "
          fi
